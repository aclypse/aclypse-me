{"version":3,"file":"component---src-components-portfolio-item-tsx-511ac7d7ba0500e0d0b5.js","mappings":"8KAoFA,UA5EoE,SAAAA,GAClE,MAA+CA,EAAMC,KAAKC,IAAlDC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,OAAQC,EAAnC,EAAmCA,QACnC,EAAoCN,EAAMC,KAAKM,KAAMC,aAA7CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,SAEfC,EAAUZ,EAAMC,KAAKY,OAArBD,MACFE,EAAMF,EAAMG,WAAU,SAAAC,GAAI,aAAI,UAAAA,EAAKC,KAAKZ,cAAV,eAAkBa,SAASb,aAA3B,EAA2BA,EAAQa,KAA3D,IACNC,EAAOL,EAAM,EAAI,EAAIF,EAAMA,EAAMQ,OAAS,GAAKR,EAAME,EAAM,GAC3DO,EAAOP,EAAM,IAAMF,EAAMQ,OAASR,EAAM,GAAKA,EAAME,EAAM,GAEzDQ,GAAWC,EAAAA,EAAAA,IAAa,CAC5BC,aAAc,YACZC,EAAAA,EAAAA,IAASJ,EAAMJ,KAAKZ,OAAQa,KAFF,EAI5BQ,cAAe,YACbD,EAAAA,EAAAA,IAASN,EAAMF,KAAKZ,OAAQa,KAC7B,IAGH,OACES,EAAAA,EAAAA,IAACC,EAAAA,EAAD,CACEC,UAAW1B,aAAF,EAAEA,EAAaM,MACxBA,OAAUN,aAAL,EAAKA,EAAaM,OAAlB,MAA8BA,EACnCqB,YAAaxB,EACbI,OAAQA,EACRC,SAAUA,EACVW,SAAUA,IAEVK,EAAAA,EAAAA,IAAAA,MAAAA,MACEA,EAAAA,EAAAA,IAAAA,IAAAA,KAAIxB,EAAa2B,cACjBH,EAAAA,EAAAA,IAACI,EAAAA,YAAD,KAAc3B,IA7BtB,C","sources":["webpack://aclypse-site/./src/components/portfolio-item.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { FC } from \"react\";\nimport { graphql, navigate } from \"gatsby\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport { useSwipeable } from \"react-swipeable\";\n\nimport ContentLayout from \"./content-layout\";\n\nconst PortfolioItem: FC<{ data: GatsbyTypes.PortfolioByIdQuery }> = props => {\n  const { frontmatter, body, fields, excerpt } = props.data.mdx!;\n  const { title, author, keywords } = props.data.site!.siteMetadata!;\n\n  const { edges } = props.data.allMdx!;\n  const idx = edges.findIndex(edge => edge.node.fields?.slug === fields?.slug);\n  const prev = idx - 1 < 0 ? edges[edges.length - 1] : edges[idx - 1];\n  const next = idx + 1 === edges.length ? edges[0] : edges[idx + 1];\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => {\n      navigate(next!.node.fields!.slug!);\n    },\n    onSwipedRight: () => {\n      navigate(prev!.node.fields!.slug!);\n    },\n  });\n\n  return (\n    <ContentLayout\n      postTitle={frontmatter?.title!}\n      title={`${frontmatter?.title!} | ${title!}`}\n      description={excerpt!}\n      author={author!}\n      keywords={keywords!}\n      handlers={handlers}\n    >\n      <div>\n        <p>{frontmatter!.description}</p>\n        <MDXRenderer>{body}</MDXRenderer>\n      </div>\n    </ContentLayout>\n  );\n};\n\nexport const query = graphql`\n  query PortfolioById($id: String!) {\n    mdx(id: { eq: $id }) {\n      body\n      excerpt(pruneLength: 120)\n      frontmatter {\n        title\n        date\n        description\n      }\n      fields {\n        slug\n      }\n    }\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { published: { eq: true } }\n        fields: { type: { eq: \"portfolio\" } }\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        author\n        keywords\n        description\n      }\n    }\n  }\n`;\n\nexport default PortfolioItem;\n"],"names":["props","data","mdx","frontmatter","body","fields","excerpt","site","siteMetadata","title","author","keywords","edges","allMdx","idx","findIndex","edge","node","slug","prev","length","next","handlers","useSwipeable","onSwipedLeft","navigate","onSwipedRight","___EmotionJSX","ContentLayout","postTitle","description","MDXRenderer"],"sourceRoot":""}